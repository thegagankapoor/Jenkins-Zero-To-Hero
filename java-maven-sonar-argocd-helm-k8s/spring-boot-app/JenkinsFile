pipeline {
  agent {
    docker {
      image 'thegagankapoor/docker-maven-image:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'main', url: 'https://github.com/thegagankapoor/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://43.205.207.127:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "thegagankapoor/ultimate-cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Modify and Push Git Changes') {
            steps {
                // Change into the specific repository directory
                dir('java-maven-sonar-argocd-helm-k8s') { // This is the Git repository directory
                    script {
                        // 1. Configure Git user (now correctly inside the repo)
                        sh 'git config user.email "abhishek.xyz@gmail.com"'
                        sh 'git config user.name "Abhishek Veeramalla"'
 
                        // Make sure you are on a branch, not detached HEAD, if you intend to push to it
                        // `git checkout main` or `git checkout -B main` if it might not exist
                        sh 'git checkout main'
                        // Alternatively, if the initial checkout was to a detached HEAD and you want to commit on top of it,
                        // and push that exact HEAD, you can use:
                        // sh 'git checkout -B jenkins-update' // Create a new branch for the changes
                        // Then push `jenkins-update` branch. For simplicity, let's assume `main` is correct.
 
                        // 2. Define BUILD_NUMBER (if not already an environment variable)
                        env.BUILD_NUMBER = "11" // Assuming BUILD_NUMBER comes from somewhere else (e.g., Jenkins built-in)
 
                        // 3. Perform the sed command
                        sh "sed -i 's/replaceImageTag/${env.BUILD_NUMBER}/g' spring-boot-app-manifests/deployment.yml"
                        // Note: The path here is now relative to 'java-maven-sonar-argocd-helm-k8s'
 
                        // 4. Add and Commit changes
                        sh 'git add spring-boot-app-manifests/deployment.yml'
                        sh "git commit -m \"update deployment image to version ${env.BUILD_NUMBER}\""
 
                        // 5. Push the changes
                        // Use Jenkins Credentials for the GitHub Personal Access Token (PAT) for security
                        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                            sh 'git push https://oauth2:${GITHUB_TOKEN}@github.com/thegagankapoor/Jenkins-Zero-To-Hero.git main'
                            // Ensure 'main' is the branch you intend to push to.
                            // If you checked out to a new branch like 'jenkins-update', push that branch.
                        }
                    }
                }
            }
        }
 
  }
}
